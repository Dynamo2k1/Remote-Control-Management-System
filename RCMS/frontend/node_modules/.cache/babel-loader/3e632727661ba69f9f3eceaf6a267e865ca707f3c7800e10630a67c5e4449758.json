{"ast":null,"code":"import axios from 'axios';\n\n// Create an Axios instance for API calls\nconst api = axios.create({\n  baseURL: 'http://127.0.0.1:5000',\n  timeout: 10000 // 10 seconds timeout\n});\n\n// Add token to the request headers if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Function to handle login\nexport const login = async (username, password) => {\n  try {\n    const response = await api.post('/auth/login', {\n      username,\n      password\n    });\n    if (response && response.data && response.data.access_token) {\n      const {\n        access_token\n      } = response.data;\n      localStorage.setItem('token', access_token);\n      return {\n        success: true\n      };\n    } else {\n      return {\n        success: false,\n        message: 'Unexpected response format from server'\n      };\n    }\n  } catch (error) {\n    if (error.response) {\n      var _error$response$data;\n      const message = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Invalid username or password';\n      return {\n        success: false,\n        message\n      };\n    } else if (error.request) {\n      return {\n        success: false,\n        message: 'Server did not respond. Please try again.'\n      };\n    } else {\n      return {\n        success: false,\n        message: 'An unexpected error occurred'\n      };\n    }\n  }\n};\n\n// Function to upload and execute YAML commands\nexport const executeDevices = async file => {\n  try {\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await api.post('/devices/execute', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return {\n      success: true,\n      data: response.data\n    };\n  } catch (error) {\n    if (error.response) {\n      var _error$response$data2;\n      const message = ((_error$response$data2 = error.response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.error) || 'Failed to execute commands';\n      return {\n        success: false,\n        message\n      };\n    } else if (error.request) {\n      return {\n        success: false,\n        message: 'Server did not respond. Please try again.'\n      };\n    } else {\n      return {\n        success: false,\n        message: 'An unexpected error occurred'\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","login","username","password","response","post","data","access_token","setItem","success","message","error","_error$response$data","executeDevices","file","formData","FormData","append","_error$response$data2"],"sources":["/mnt/e/Cyber Security/3rd Semester/Data Structure/Data_structure_project/RCMS/updated_frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create an Axios instance for API calls\nconst api = axios.create({\n  baseURL: 'http://127.0.0.1:5000',\n  timeout: 10000, // 10 seconds timeout\n});\n\n// Add token to the request headers if available\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Function to handle login\nexport const login = async (username, password) => {\n  try {\n    const response = await api.post('/auth/login', { username, password });\n    if (response && response.data && response.data.access_token) {\n      const { access_token } = response.data;\n      localStorage.setItem('token', access_token);\n      return { success: true };\n    } else {\n      return { success: false, message: 'Unexpected response format from server' };\n    }\n  } catch (error) {\n    if (error.response) {\n      const message = error.response.data?.error || 'Invalid username or password';\n      return { success: false, message };\n    } else if (error.request) {\n      return { success: false, message: 'Server did not respond. Please try again.' };\n    } else {\n      return { success: false, message: 'An unexpected error occurred' };\n    }\n  }\n};\n\n// Function to upload and execute YAML commands\nexport const executeDevices = async (file) => {\n  try {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const response = await api.post('/devices/execute', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n\n    return { success: true, data: response.data };\n  } catch (error) {\n    if (error.response) {\n      const message = error.response.data?.error || 'Failed to execute commands';\n      return { success: false, message };\n    } else if (error.request) {\n      return { success: false, message: 'Server did not respond. Please try again.' };\n    } else {\n      return { success: false, message: 'An unexpected error occurred' };\n    }\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}