{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://127.0.0.1:5000' // Ensure the backend URL is correct\n});\nexport const login = async (username, password) => {\n  try {\n    const response = await api.post('/auth/login', {\n      username,\n      password\n    });\n\n    // Validate the response structure before accessing properties\n    if (response && response.data && response.data.access_token) {\n      const {\n        access_token\n      } = response.data;\n      localStorage.setItem('token', access_token); // Store token\n      return {\n        success: true\n      };\n    } else {\n      return {\n        success: false,\n        message: 'Unexpected response from the server'\n      };\n    }\n  } catch (error) {\n    var _error$response, _error$response$data;\n    console.error('Login failed:', error);\n    const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Invalid credentials';\n    return {\n      success: false,\n      message\n    };\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","login","username","password","response","post","data","access_token","localStorage","setItem","success","message","error","_error$response","_error$response$data","console"],"sources":["/mnt/e/Cyber Security/3rd Semester/Data Structure/Data_structure_project/RCMS/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://127.0.0.1:5000', // Ensure the backend URL is correct\n});\n\nexport const login = async (username, password) => {\n  try {\n    const response = await api.post('/auth/login', { username, password });\n\n    // Validate the response structure before accessing properties\n    if (response && response.data && response.data.access_token) {\n      const { access_token } = response.data;\n      localStorage.setItem('token', access_token); // Store token\n      return { success: true };\n    } else {\n      return { success: false, message: 'Unexpected response from the server' };\n    }\n  } catch (error) {\n    console.error('Login failed:', error);\n    const message = error.response?.data?.error || 'Invalid credentials';\n    return { success: false, message };\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB,CAAE;AACpC,CAAC,CAAC;AAEF,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,aAAa,EAAE;MAAEH,QAAQ;MAAEC;IAAS,CAAC,CAAC;;IAEtE;IACA,IAAIC,QAAQ,IAAIA,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACC,YAAY,EAAE;MAC3D,MAAM;QAAEA;MAAa,CAAC,GAAGH,QAAQ,CAACE,IAAI;MACtCE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,YAAY,CAAC,CAAC,CAAC;MAC7C,OAAO;QAAEG,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,MAAM;MACL,OAAO;QAAEA,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAsC,CAAC;IAC3E;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACdC,OAAO,CAACH,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrC,MAAMD,OAAO,GAAG,EAAAE,eAAA,GAAAD,KAAK,CAACR,QAAQ,cAAAS,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBP,IAAI,cAAAQ,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAAI,qBAAqB;IACpE,OAAO;MAAEF,OAAO,EAAE,KAAK;MAAEC;IAAQ,CAAC;EACpC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}